import cv2
import matplotlib.pyplot as plt
def laplacian_sharpen(image):
    laplacian = cv2.Laplacian(image, cv2.CV_64F)
    sharpened_image = cv2.convertScaleAbs(image + laplacian)
    return sharpened_image
def canny_edge_detection(image, low_threshold, high_threshold):
    return cv2.Canny(image, low_threshold, high_threshold)
image = cv2.imread('picture/cman.BMP', cv2.IMREAD_GRAYSCALE)
sharpened_image = laplacian_sharpen(image)
edges_1 = canny_edge_detection(image, 50, 100)
edges_2 = canny_edge_detection(image, 100, 150)
edges_3 = canny_edge_detection(image, 150, 200)
edges_4 = canny_edge_detection(image, 200, 250)
fig, axs = plt.subplots(2, 3, figsize=(15, 10))
axs[0, 0].imshow(image, cmap='gray')
axs[0, 0].set_title('Original Image')
axs[0, 0].axis('off')
axs[1, 0].imshow(sharpened_image, cmap='gray')
axs[1, 0].set_title('Laplacian Sharpened Image')
axs[1, 0].axis('off')
axs[0, 1].imshow(edges_1, cmap='gray')
axs[0, 1].set_title('Canny Edge Detection (50, 100)')
axs[0, 1].axis('off')
axs[0, 2].imshow(edges_2, cmap='gray')
axs[0, 2].set_title('Canny Edge Detection (100, 150)')
axs[0, 2].axis('off')
axs[1, 1].imshow(edges_3, cmap='gray')
axs[1, 1].set_title('Canny Edge Detection (150, 200)')
axs[1, 1].axis('off')
axs[1, 2].imshow(edges_4, cmap='gray')
axs[1, 2].set_title('Canny Edge Detection (200, 250)')
axs[1, 2].axis('off')
plt.tight_layout()
plt.show()
